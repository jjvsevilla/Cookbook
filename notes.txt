docker info
https://hub.docker.com/_/postgres/

https://docs.docker.com/engine/examples/postgresql_service/

ref video
https://www.youtube.com/watch?v=tbsZUYdVmOs

create postgres container
docker run --name postgrescontainer -e POSTGRES_PASSWORD=Cookbook123 -d postgres

connect via psql
docker run -it --rm --link postgrescontainer:postgres postgres psql -h postgres -U postgres

database files folder
/var/lib/postgresql/data

########
POSTGRES
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-postgresql-on-ubuntu-14-04

default user account
  postgres  

To use Postgres, we'll need to log into that account:
sudo -i -u postgres

To get a Postgres prompt:
psql

exit postgres prompt:
\q

As the postgres user
  Create DB
  createdb Cookbook

  Connect to database
  psql -d Cookbook


#############################
create database and seed data
#############################

npm install knex -g
knex init

#create schema migration
knex migrate:make recipe_tables
knex migrate:latest  

#run in alphabetical order
knex seed:make 01-category
knex seed:make 02-recipe
knex seed:make 03-ingredient
knex seed:make 04-ingredient_recipe

#seed data
knex seed:run

###########

{
  "id": 1,
  "recipeName": "recipe teeeeeest",
  "category_id": 1,
  "chef": "chef teeeeeest",
  "ingredients": [
    {
      "name": "teeeeeest",
      "amount": "1 package teeeeeest"
    },
    {
      "name": "teeeeeest teeeeeest",
      "amount": "1 cup teeeeeest"
    }
  ],
  "preparation": "preparation teeeeeest",
  "rating": 2,
  "imageUrl": "http://162.61.226.249/PicOriginal/P170292013090324_5.jpg",
  "publishdate": "6/15/2016"
}

#############


          /*
          var work = [
              trx("recipe").where('id', id).update(reqData),
              trx("ingredient_recipe").whereIn('ingredient_id', arrIngredientsRecipe.del).andWhere('recipe_id', id).del()
          ];

          if(arrIngredientsRecipe.add.length) 
          {     
            work.push(trx.insert(arrIngredientsRecipe.add).into("ingredient"));

              //trx("ingredient").whereIn('ingredient_id', arrIngredientsRecipe.del).andWhere('recipe_id', id).del(),
            work.push(trx.insert(arrIngredientsRecipe.add).into("ingredient_recipe")); 
          } 
          
          return Promise.all(work);
          */
